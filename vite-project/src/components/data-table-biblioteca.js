"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataTableBiblioteca = DataTableBiblioteca;
var jsx_runtime_1 = require("react/jsx-runtime");
var React = require("react");
var react_1 = require("react");
var file_importer_1 = require("./file-importer");
var useFirebaseData_1 = require("@/hooks/useFirebaseData");
var button_1 = require("./ui/button");
var card_1 = require("./ui/card");
var badge_1 = require("./ui/badge");
var skeleton_1 = require("./ui/skeleton");
var lucide_react_1 = require("lucide-react");
var columns = [
    { Header: "NOMBRE ESTUDIANTE", accessor: "nombreEstudiante" },
    { Header: "RUT", accessor: "rut" },
    { Header: "CARRERA", accessor: "carrera" },
    { Header: "FACULTAD", accessor: "facultad" },
    { Header: "NOMBRE EMPRESA", accessor: "nombreEmpresa" },
    { Header: "COMUNA", accessor: "comuna" },
    { Header: "REGIÓN", accessor: "region" },
    { Header: "JEFE DIRECTO", accessor: "jefeDirecto" },
    { Header: "EMAIL ESTUDIANTE", accessor: "email" },
    { Header: "EMAIL EMPRESA", accessor: "emailEmpresa" },
    { Header: "TELÉFONO EMPRESA", accessor: "telefonoEmpresa" },
    { Header: "CARGO", accessor: "cargo" },
    { Header: "SEMESTRE", accessor: "semestre" },
    { Header: "AÑO", accessor: "anio" },
    { Header: "FECHA INICIO", accessor: "fechaInicio" },
    { Header: "FECHA TÉRMINO", accessor: "fechaTermino" },
    { Header: "HORAS PRÁCTICA", accessor: "horasPractica" },
    { Header: "SUPERVISOR", accessor: "supervisor" },
    { Header: "NOTA PRÁCTICA", accessor: "notaPractica" },
    { Header: "EVALUACIÓN ENVIADA", accessor: "evaluacionEnviada" },
];
function DataTableBiblioteca() {
    var _a = (0, useFirebaseData_1.useFirebaseData)(), data = _a.data, loading = _a.loading, error = _a.error, refreshData = _a.refreshData;
    var _b = (0, react_1.useState)(false), showImporter = _b[0], setShowImporter = _b[1];
    var handleDataImported = function (importedData) {
        setShowImporter(false);
        // Los datos se actualizarán automáticamente gracias al listener de Firebase
    };
    var exportToCSV = function () {
        if (data.length === 0)
            return;
        var csvContent = __spreadArray([
            columns.map(function (col) { return col.Header; }).join(',')
        ], data.map(function (row) {
            return columns.map(function (col) { return "\"".concat(row[col.accessor] || '', "\""); }).join(',');
        }), true).join('\n');
        var blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
        var link = document.createElement('a');
        var url = URL.createObjectURL(blob);
        link.setAttribute('href', url);
        link.setAttribute('download', "estudiantes_".concat(new Date().toISOString().split('T')[0], ".csv"));
        link.style.visibility = 'hidden';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };
    if (loading) {
        return ((0, jsx_runtime_1.jsx)("div", { className: "space-y-4", children: (0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsx)(skeleton_1.Skeleton, { className: "h-6 w-48" }), (0, jsx_runtime_1.jsx)(skeleton_1.Skeleton, { className: "h-4 w-96" })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsx)("div", { className: "space-y-2", children: Array.from({ length: 5 }).map(function (_, i) { return ((0, jsx_runtime_1.jsx)(skeleton_1.Skeleton, { className: "h-12 w-full" }, i)); }) }) })] }) }));
    }
    if (error) {
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { className: "border-red-200 bg-red-50", children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: "text-red-700", children: "Error al cargar datos" }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { className: "text-red-600", children: error })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsxs)(button_1.Button, { onClick: refreshData, variant: "outline", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.RefreshCw, { className: "h-4 w-4 mr-2" }), "Reintentar"] }) })] }));
    }
    return ((0, jsx_runtime_1.jsxs)("div", { className: "space-y-6", children: [(0, jsx_runtime_1.jsx)(card_1.Card, { children: (0, jsx_runtime_1.jsx)(card_1.CardHeader, { children: (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)(card_1.CardTitle, { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Database, { className: "h-5 w-5" }), "Biblioteca de Datos de Estudiantes"] }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "Gestiona y visualiza los datos de estudiantes en pr\u00E1ctica profesional" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col sm:flex-row items-start sm:items-center gap-2", children: [(0, jsx_runtime_1.jsxs)(badge_1.Badge, { variant: "secondary", className: "text-sm", children: [data.length, " registro", data.length !== 1 ? 's' : ''] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-wrap gap-2", children: [(0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "outline", size: "sm", onClick: refreshData, disabled: loading, className: "whitespace-nowrap", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.RefreshCw, { className: "h-4 w-4 mr-2" }), (0, jsx_runtime_1.jsx)("span", { className: "hidden sm:inline", children: "Actualizar" }), (0, jsx_runtime_1.jsx)("span", { className: "sm:hidden", children: "Act." })] }), (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "outline", size: "sm", onClick: exportToCSV, disabled: data.length === 0, className: "whitespace-nowrap", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Download, { className: "h-4 w-4 mr-2" }), (0, jsx_runtime_1.jsx)("span", { className: "hidden sm:inline", children: "Exportar CSV" }), (0, jsx_runtime_1.jsx)("span", { className: "sm:hidden", children: "CSV" })] }), (0, jsx_runtime_1.jsxs)(button_1.Button, { onClick: function () { return setShowImporter(!showImporter); }, className: "bg-blue-600 hover:bg-blue-700 whitespace-nowrap", size: "sm", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Upload, { className: "h-4 w-4 mr-2" }), (0, jsx_runtime_1.jsx)("span", { className: "hidden sm:inline", children: "Importar Datos" }), (0, jsx_runtime_1.jsx)("span", { className: "sm:hidden", children: "Importar" })] })] })] })] }) }) }), showImporter && ((0, jsx_runtime_1.jsx)(file_importer_1.FileImporter, { onDataImported: handleDataImported })), (0, jsx_runtime_1.jsx)(card_1.Card, { children: (0, jsx_runtime_1.jsx)(card_1.CardContent, { className: "p-0", children: data.length === 0 ? ((0, jsx_runtime_1.jsx)("div", { className: "text-center py-12 text-gray-500", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col items-center gap-4", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Database, { className: "h-16 w-16 text-gray-300" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: "text-xl font-medium", children: "No hay datos disponibles" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-400 mt-1", children: "Importa un archivo Excel o CSV para comenzar" })] }), (0, jsx_runtime_1.jsxs)(button_1.Button, { onClick: function () { return setShowImporter(true); }, className: "mt-2", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Upload, { className: "h-4 w-4 mr-2" }), "Importar Datos"] })] }) })) : ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("div", { className: "hidden lg:block overflow-x-auto", children: (0, jsx_runtime_1.jsxs)("table", { className: "min-w-full border-collapse", children: [(0, jsx_runtime_1.jsx)("thead", { className: "bg-blue-100 sticky top-0", children: (0, jsx_runtime_1.jsx)("tr", { children: columns.map(function (col) { return ((0, jsx_runtime_1.jsx)("th", { className: "px-3 py-3 border-b text-xs font-bold text-blue-900 text-left whitespace-nowrap min-w-[120px]", children: col.Header }, col.accessor)); }) }) }), (0, jsx_runtime_1.jsx)("tbody", { children: data.map(function (row, idx) { return ((0, jsx_runtime_1.jsx)("tr", { className: "hover:bg-blue-50 border-b", children: columns.map(function (col) { return ((0, jsx_runtime_1.jsx)("td", { className: "px-3 py-3 text-sm whitespace-nowrap", children: col.accessor === 'evaluacionEnviada' ? ((0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: row[col.accessor] === 'Sí' || row[col.accessor] === 'Si' ? 'default' : 'secondary', className: row[col.accessor] === 'Sí' || row[col.accessor] === 'Si' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800', children: row[col.accessor] || 'No' })) : col.accessor === 'notaPractica' && row[col.accessor] ? ((0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "outline", className: parseFloat(row[col.accessor]) >= 4.0 ? 'bg-green-50 text-green-700 border-green-200' : 'bg-red-50 text-red-700 border-red-200', children: row[col.accessor] })) : col.accessor === 'email' || col.accessor === 'emailEmpresa' ? ((0, jsx_runtime_1.jsx)("a", { href: "mailto:".concat(row[col.accessor]), className: "text-blue-600 hover:text-blue-800 hover:underline", children: row[col.accessor] || '-' })) : ((0, jsx_runtime_1.jsx)("span", { className: "max-w-[200px] truncate block", title: String(row[col.accessor] || '-'), children: row[col.accessor] || '-' })) }, col.accessor)); }) }, row.id || idx)); }) })] }) }), (0, jsx_runtime_1.jsx)("div", { className: "hidden md:block lg:hidden overflow-x-auto", children: (0, jsx_runtime_1.jsxs)("table", { className: "min-w-full border-collapse", children: [(0, jsx_runtime_1.jsx)("thead", { className: "bg-blue-100 sticky top-0", children: (0, jsx_runtime_1.jsxs)("tr", { children: [(0, jsx_runtime_1.jsx)("th", { className: "px-3 py-3 border-b text-xs font-bold text-blue-900 text-left", children: "ESTUDIANTE" }), (0, jsx_runtime_1.jsx)("th", { className: "px-3 py-3 border-b text-xs font-bold text-blue-900 text-left", children: "EMPRESA" }), (0, jsx_runtime_1.jsx)("th", { className: "px-3 py-3 border-b text-xs font-bold text-blue-900 text-left", children: "UBICACI\u00D3N" }), (0, jsx_runtime_1.jsx)("th", { className: "px-3 py-3 border-b text-xs font-bold text-blue-900 text-left", children: "PR\u00C1CTICA" }), (0, jsx_runtime_1.jsx)("th", { className: "px-3 py-3 border-b text-xs font-bold text-blue-900 text-left", children: "ESTADO" })] }) }), (0, jsx_runtime_1.jsx)("tbody", { children: data.map(function (row, idx) { return ((0, jsx_runtime_1.jsxs)("tr", { className: "hover:bg-blue-50 border-b", children: [(0, jsx_runtime_1.jsx)("td", { className: "px-3 py-3 text-sm", children: (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: "font-medium", children: row.nombreEstudiante }), (0, jsx_runtime_1.jsx)("p", { className: "text-xs text-gray-500", children: row.rut }), (0, jsx_runtime_1.jsx)("p", { className: "text-xs text-gray-500", children: row.carrera })] }) }), (0, jsx_runtime_1.jsx)("td", { className: "px-3 py-3 text-sm", children: (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: "font-medium", children: row.nombreEmpresa }), (0, jsx_runtime_1.jsx)("p", { className: "text-xs text-gray-500", children: row.jefeDirecto }), (0, jsx_runtime_1.jsx)("p", { className: "text-xs text-gray-500", children: row.cargo })] }) }), (0, jsx_runtime_1.jsx)("td", { className: "px-3 py-3 text-sm", children: (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: "font-medium", children: row.comuna }), (0, jsx_runtime_1.jsx)("p", { className: "text-xs text-gray-500", children: row.region })] }) }), (0, jsx_runtime_1.jsx)("td", { className: "px-3 py-3 text-sm", children: (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("p", { className: "text-xs", children: [row.fechaInicio, " - ", row.fechaTermino] }), (0, jsx_runtime_1.jsxs)("p", { className: "text-xs text-gray-500", children: [row.horasPractica, " hrs"] }), row.notaPractica && ((0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "outline", className: parseFloat(row.notaPractica) >= 4.0 ? 'bg-green-50 text-green-700 border-green-200' : 'bg-red-50 text-red-700 border-red-200', children: row.notaPractica }))] }) }), (0, jsx_runtime_1.jsx)("td", { className: "px-3 py-3 text-sm", children: (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: row.evaluacionEnviada === 'Sí' || row.evaluacionEnviada === 'Si' ? 'default' : 'secondary', className: row.evaluacionEnviada === 'Sí' || row.evaluacionEnviada === 'Si' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800', children: row.evaluacionEnviada || 'No' }) })] }, row.id || idx)); }) })] }) }), (0, jsx_runtime_1.jsx)("div", { className: "md:hidden space-y-4 p-4", children: data.map(function (row, idx) { return ((0, jsx_runtime_1.jsx)(card_1.Card, { className: "border-l-4 border-l-blue-500", children: (0, jsx_runtime_1.jsx)(card_1.CardContent, { className: "p-4", children: (0, jsx_runtime_1.jsxs)("div", { className: "space-y-3", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between items-start", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h3", { className: "font-semibold text-lg", children: row.nombreEstudiante }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600", children: row.rut })] }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: row.evaluacionEnviada === 'Sí' || row.evaluacionEnviada === 'Si' ? 'default' : 'secondary', className: row.evaluacionEnviada === 'Sí' || row.evaluacionEnviada === 'Si' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800', children: row.evaluacionEnviada || 'No' })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 gap-2 text-sm", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "font-medium text-gray-700", children: "Carrera:" }), (0, jsx_runtime_1.jsx)("span", { className: "ml-2", children: row.carrera })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "font-medium text-gray-700", children: "Facultad:" }), (0, jsx_runtime_1.jsx)("span", { className: "ml-2", children: row.facultad })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "font-medium text-gray-700", children: "Empresa:" }), (0, jsx_runtime_1.jsx)("span", { className: "ml-2", children: row.nombreEmpresa })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "font-medium text-gray-700", children: "Ubicaci\u00F3n:" }), (0, jsx_runtime_1.jsxs)("span", { className: "ml-2", children: [row.comuna, ", ", row.region] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "font-medium text-gray-700", children: "Jefe Directo:" }), (0, jsx_runtime_1.jsx)("span", { className: "ml-2", children: row.jefeDirecto })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "font-medium text-gray-700", children: "Cargo:" }), (0, jsx_runtime_1.jsx)("span", { className: "ml-2", children: row.cargo })] }), row.email && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "font-medium text-gray-700", children: "Email:" }), (0, jsx_runtime_1.jsx)("a", { href: "mailto:".concat(row.email), className: "ml-2 text-blue-600 hover:text-blue-800 hover:underline", children: row.email })] })), (row.fechaInicio || row.fechaTermino) && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "font-medium text-gray-700", children: "Per\u00EDodo:" }), (0, jsx_runtime_1.jsxs)("span", { className: "ml-2", children: [row.fechaInicio, " - ", row.fechaTermino] })] })), row.horasPractica && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("span", { className: "font-medium text-gray-700", children: "Horas:" }), (0, jsx_runtime_1.jsxs)("span", { className: "ml-2", children: [row.horasPractica, " hrs"] })] })), row.notaPractica && ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center", children: [(0, jsx_runtime_1.jsx)("span", { className: "font-medium text-gray-700", children: "Nota:" }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "outline", className: "ml-2 ".concat(parseFloat(row.notaPractica) >= 4.0 ? 'bg-green-50 text-green-700 border-green-200' : 'bg-red-50 text-red-700 border-red-200'), children: row.notaPractica })] }))] })] }) }) }, row.id || idx)); }) }), data.length > 0 && ((0, jsx_runtime_1.jsx)("div", { className: "px-4 py-3 bg-gray-50 text-sm text-gray-600 border-t", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col sm:flex-row sm:justify-between sm:items-center gap-2", children: [(0, jsx_runtime_1.jsxs)("span", { children: ["Mostrando ", data.length, " estudiante", data.length !== 1 ? 's' : ''] }), (0, jsx_runtime_1.jsx)("span", { className: "text-xs hidden lg:block", children: "Desliza horizontalmente para ver todas las columnas \u2192" })] }) }))] })) }) }), data.length > 0 && ((0, jsx_runtime_1.jsx)(card_1.Card, { className: "bg-blue-50 border-blue-200", children: (0, jsx_runtime_1.jsx)(card_1.CardContent, { className: "pt-4 sm:pt-6", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 text-sm text-blue-700", children: [(0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 sm:grid-cols-3 gap-2 sm:gap-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "text-center sm:text-left", children: [(0, jsx_runtime_1.jsx)("span", { className: "block sm:inline", children: "Total de estudiantes:" }), (0, jsx_runtime_1.jsx)("strong", { className: "ml-1", children: data.length })] }), (0, jsx_runtime_1.jsxs)("div", { className: "text-center sm:text-left", children: [(0, jsx_runtime_1.jsx)("span", { className: "block sm:inline", children: "Evaluaciones enviadas:" }), (0, jsx_runtime_1.jsx)("strong", { className: "ml-1", children: data.filter(function (student) { return student.evaluacionEnviada === 'Sí' || student.evaluacionEnviada === 'Si'; }).length })] }), (0, jsx_runtime_1.jsxs)("div", { className: "text-center sm:text-left", children: [(0, jsx_runtime_1.jsx)("span", { className: "block sm:inline", children: "Pendientes:" }), (0, jsx_runtime_1.jsx)("strong", { className: "ml-1", children: data.filter(function (student) { return student.evaluacionEnviada !== 'Sí' && student.evaluacionEnviada !== 'Si'; }).length })] })] }), (0, jsx_runtime_1.jsx)("div", { className: "text-xs text-blue-600 text-center sm:text-right", children: "Sincronizado con Firebase" })] }) }) }))] }));
}
